name: Test ENV CI-CD

on:
  push:
    branches: ['main']

jobs:
  Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Run tests
        run: npm run test

  Styling_and_security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Run formating and linting checks and code security check
        run: |
          npm run check-format
          npm run lint

  test_preview:
    if: ${{ !contains(github.event.head_commit.message, '[skip test-env]') }}
    needs: [Tests, Styling_and_security]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: DOCKER - Login, build and push to hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
          docker build . --target=production -t ${{secrets.DOCKER_USERNAME}}/password-generator-app:TEST-${{github.sha}}
          docker push  ${{secrets.DOCKER_USERNAME}}/password-generator-app:TEST-${{github.sha}}

      - uses: hashicorp/setup-terraform@v3
      - name: Terraform – Init & Apply
        working-directory: ./terraform
        run: |
          terraform init
          terraform plan
          terraform apply -auto-approve

          echo "Starting instance refresh for ASG"
          REFRESH_ID=$(aws autoscaling start-instance-refresh \
            --auto-scaling-group-name ec2-asg \
            --preferences MinHealthyPercentage=50 \
            --query 'InstanceRefreshId' \
            --output text)

          echo "Refresh started with ID: $REFRESH_ID"
          echo "Waiting for refresh to complete..."

          aws autoscaling wait instance-refresh-complete \
            --auto-scaling-group-name ec2-asg

          echo "Deployment complete ✅"
          aws autoscaling describe-instance-refreshes \
            --auto-scaling-group-name ec2-asg \
            --instance-refresh-ids $REFRESH_ID
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-west-2
          TF_VAR_docker_username: ${{ secrets.DOCKER_USERNAME }}
          TF_VAR_github_sha: ${{ github.sha }}
